{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiSettings": {
            "type": "object",
            "metadata": {
                "Description": "API version of the resource type"
            }
        },
        "networkSettings": {
            "type": "secureObject",
            "metadata": {
                "Description": "Network settings object"
            }
        },
        "storageSettings": {
            "type": "object",
            "metadata": {
                "Description": "Storage settings object"
            }
        }
    },
    "variables": {
        "loadBalancerIpName": "[concat(parameters('networkSettings').loadbalancerSettings.loadBalancerName, parameters('networkSettings').publicIPAddressNameSuffix)]"
    },
    "resources": [
       
        {
            "name": "[parameters('storageSettings').storageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiSettings').storageApiVersion]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageSettings').storageAccountType]",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "name": "[parameters('storageSettings').diagnosticStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiSettings').storageApiVersion]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageSettings').storageAccountType]",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "comments": "This is the secure storage account used for backups and other admin functions",

            "name": "[parameters('storageSettings').secureGenericStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiSettings').storageApiVersion]",
            "location": "[resourceGroup().location]",

            "sku": {
                "name": "[parameters('storageSettings').storageAccountType]",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "comments": "This is the storage account used for video uploads",

            "name": "[parameters('storageSettings').videoUploadsStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiSettings').storageApiVersion]",
            "location": "[resourceGroup().location]",

            "sku": {
                "name": "[parameters('storageSettings').storageAccountType]",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "comments": "This is the storage account used for WAMS",

            "name": "[parameters('storageSettings').wamsStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiSettings').storageApiVersion]",
            "location": "[resourceGroup().location]",

            "sku": {
                "name": "[parameters('storageSettings').storageAccountType]",
                "tier": "Standard"
            },
            "kind": "Storage"
        }, 
        {
            "comments": "Windows Media service",
            "type": "Microsoft.Media/mediaservices",
            "name": "[parameters('storageSettings').mediaServicesAccountName]",
            "apiVersion": "[parameters('apiSettings').mediaServicesApiVersion]",
            "location": "[resourceGroup().location]",
            "properties": {
                "storageAccounts": [
                    {
                        "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageSettings').wamsStorageAccountName)]",
                        "isPrimary": true
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageSettings').wamsStorageAccountName)]"
            ]
        }
    ]
}